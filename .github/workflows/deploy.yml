name: Deploy IPSL Tool to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/ipsl-tool:latest .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/ipsl-tool:latest

      - name: Delete old images from ECR
        run: |
          # Fetch the latest image digest
          LATEST_IMAGE_DIGEST=$(aws ecr describe-images --repository-name ipsl-tool --region ${{ secrets.AWS_REGION }} --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageDigest' --output text)
          echo "Latest image digest: $LATEST_IMAGE_DIGEST"

          # List all image digests except the latest
          IMAGES_TO_DELETE=$(aws ecr describe-images --repository-name ipsl-tool --region ${{ secrets.AWS_REGION }} --query "imageDetails[?imageDigest!='${LATEST_IMAGE_DIGEST}'].imageDigest" --output json)

          # Check if there are images to delete
          if [ "$IMAGES_TO_DELETE" != "[]" ]; then
            echo "Deleting old images from ECR"

            # Format the JSON for batch-delete-image
            FORMATTED_IMAGE_IDS=$(echo "$IMAGES_TO_DELETE" | jq -c '[.[] | {imageDigest: .}]')

            # Delete the images
            aws ecr batch-delete-image --repository-name ipsl-tool --region ${{ secrets.AWS_REGION }} --image-ids "$FORMATTED_IMAGE_IDS"
          else
            echo "No old images to delete"
          fi

      - name: Deploy to ECS
        run: |
          ecs-cli configure --region ${{ secrets.AWS_REGION }} --access-key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret-key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ecs-cli compose --file docker-compose.yml service up

      - name: Install jq (for JSON processing)
        run: sudo apt-get install -y jq
